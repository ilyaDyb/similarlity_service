version: '3.8'

services:
  go-backend:
    build: ./go_backend
    depends_on:
      db:
        condition: service_healthy
      python-app:
        condition: service_started
    environment:
      PYTHON_APP_URL: http://python-app:5000
    ports:
      - "8000:8000"
    networks:
      - app-network

  python-app:
    build: ./audio_processing
    volumes:
      - ./audio_processing:/app
    depends_on:
      - db
    ports:
      - "5000:5000"
    networks:
      - app-network

  db:
    image: postgres:13
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    environment:
      POSTGRES_USER: string
      POSTGRES_PASSWORD: string
      POSTGRES_DB: string
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
