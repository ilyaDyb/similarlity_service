version: '3.8'

services:
  go-backend:
    build: ./go_backend
    depends_on:
      db:
        condition: service_healthy
      python-app:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      PYTHON_APP_URL: http://python-app:5000
    ports:
      - "8000:8000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 10s
      timeout: 5s
      retries: 5

  python-app:
    build: ./audio_processing
    volumes:
      - ./audio_processing:/app
    depends_on:
      - db
      - redis
    ports:
      - "5000:5000"
    networks:
      - app-network

  db:
    build: 
      context: .
      dockerfile: Dockerfile.postgres
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backup.sql:/docker-entrypoint-initdb.d/backup.sql
    networks:
      - app-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: wicki
      POSTGRES_DB: similarity_service
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -d similarity_service -c 'SELECT 1;'"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
